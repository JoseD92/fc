-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from ./Fc/Grammar.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parsefc -> All                              (0)
	All -> All Funcion                                 (1)
	All -> Funcion                                     (2)
	All -> All Struct                                  (3)
	All -> Struct                                      (4)
	All -> All Union                                   (5)
	All -> Union                                       (6)
	All -> All VarDeclaration                          (7)
	All -> VarDeclaration                              (8)
	VarDeclarations -> VarDeclarations VarDeclaration   (9)
	VarDeclarations -> VarDeclaration                  (10)
	ManyTypes -> ManyTypes ',' Types                   (11)
	ManyTypes -> Types                                 (12)
	asteriscos -> asteriscos '*'                       (13)
	asteriscos -> '*'                                  (14)
	basicType -> type                                  (15)
	Types -> basicType                                 (16)
	Types -> unsigned basicType                        (17)
	Types -> struct var                                (18)
	Types -> union var                                 (19)
	Types -> functionType '(' Types ')' '(' ManyTypes ')'   (20)
	Types -> functionType '(' Types ')' '(' ')'        (21)
	Types -> '(' Types asteriscos ')'                  (22)
	arrays -> arrays '[' int ']'                       (23)
	arrays -> '[' int ']'                              (24)
	variables -> variables ',' var                     (25)
	variables -> variables ',' var arrays              (26)
	variables -> variables ',' asteriscos var          (27)
	variables -> Types var                             (28)
	variables -> Types asteriscos var                  (29)
	variables -> Types var arrays                      (30)
	VarDeclaration -> variables ';'                    (31)
	StructVar -> var                                   (32)
	Struct -> struct StructVar Block2 VarDeclarations Block3 ';'   (33)
	UnionVar -> var                                    (34)
	Union -> union UnionVar Block2 VarDeclarations Block3 ';'   (35)
	Funcion -> FuncionConArgs Block FuncionP3          (36)
	Funcion -> FuncionNoArgs Block                     (37)
	FuncionNoArgs -> Types var '(' ')'                 (38)
	FuncionConArgs -> Types var FuncionP2 Parametros ')'   (39)
	FuncionP2 -> '('                                   (40)
	FuncionP3 ->                                       (41)
	Block -> Block2 Instrucciones Block3               (42)
	Block2 -> '{'                                      (43)
	Block3 -> '}'                                      (44)
	Instruccion -> Block                               (45)
	Instruccion -> For                                 (46)
	Instruccion -> While                               (47)
	Instruccion -> If                                  (48)
	Instruccion -> Asignacion ';'                      (49)
	Instruccion -> Exp ';'                             (50)
	Instruccion -> break ';'                           (51)
	Instruccion -> continue ';'                        (52)
	Instruccion -> return ';'                          (53)
	Instruccion -> return Exp ';'                      (54)
	Instruccion -> read var ';'                        (55)
	Instruccion -> write Exp ';'                       (56)
	Instruccion -> ';'                                 (57)
	For -> for '(' Instruccion BoolE2 Instruccion ')' Instruccion   (58)
	While -> while BoolE Instruccion                   (59)
	If -> if BoolE Block                               (60)
	If -> if BoolE Block else Block                    (61)
	BoolE2 -> ';' Exp ';'                              (62)
	BoolE -> '(' Exp ')'                               (63)
	Asignacion -> Atom2 '=' Exp                        (64)
	LLamada -> var '(' ParametrosIn ')'                (65)
	LLamada -> var '(' ')'                             (66)
	ParametrosIn -> ParametrosIn ',' Exp               (67)
	ParametrosIn -> Exp                                (68)
	Instrucciones -> Instrucciones Instruccion         (69)
	Instrucciones -> Instruccion                       (70)
	Instrucciones -> Instrucciones VarDeclaration      (71)
	Instrucciones -> VarDeclaration                    (72)
	Parametro -> ref Types var                         (73)
	Parametro -> Types var                             (74)
	Parametros -> Parametros ',' Parametro             (75)
	Parametros -> Parametro                            (76)
	AnomFun -> '(' Types ')' '(' Parametros ')' '{' Instrucciones '}'   (77)
	AnomFun -> '(' Types ')' '(' ')' '{' Instrucciones '}'   (78)
	arr -> arr '[' Exp ']'                             (79)
	arr ->                                             (80)
	Atom -> LLamada                                    (81)
	Atom -> int                                        (82)
	Atom -> float                                      (83)
	Atom -> bool                                       (84)
	Atom -> str                                        (85)
	Atom -> AnomFun                                    (86)
	Atom2 -> var arr                                   (87)
	Atom2 -> Exp '.' var                               (88)
	Atom2 -> '*' Exp                                   (89)
	Exp -> Exp '+' Exp                                 (90)
	Exp -> Exp '-' Exp                                 (91)
	Exp -> Exp '*' Exp                                 (92)
	Exp -> Exp '/' Exp                                 (93)
	Exp -> Exp '<<' Exp                                (94)
	Exp -> Exp '>>' Exp                                (95)
	Exp -> Exp '<' Exp                                 (96)
	Exp -> Exp '<=' Exp                                (97)
	Exp -> Exp '>' Exp                                 (98)
	Exp -> Exp '>=' Exp                                (99)
	Exp -> Exp '==' Exp                                (100)
	Exp -> Exp '!=' Exp                                (101)
	Exp -> Exp '&' Exp                                 (102)
	Exp -> Exp '%' Exp                                 (103)
	Exp -> Exp '|' Exp                                 (104)
	Exp -> Exp '&&' Exp                                (105)
	Exp -> Exp '||' Exp                                (106)
	Exp -> '(' Exp ')'                                 (107)
	Exp -> '-' Exp                                     (108)
	Exp -> Atom2                                       (109)
	Exp -> Atom                                        (110)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	var            { Var $$ }
	int            { Int $$ }
	float          { Float $$ }
	type           { Type $$ }
	functionType   { Function $$ }
	bool           { Bool $$ }
	ref            { Ref $$ }
	if             { If $$ }
	while          { While $$ }
	for            { For $$ }
	else           { Else $$ }
	union          { Union $$ }
	struct         { Struct $$ }
	unsigned       { Unsigned $$ }
	continue       { Continue $$ }
	break          { Break $$ }
	return         { Return $$ }
	read           { Read $$ }
	write          { Write $$ }
	str            { Str $$ }
	'<<'           { ShiftL $$ }
	'>>'           { ShiftR $$ }
	'.'            { Punto $$ }
	'=='           { Igual $$ }
	'>='           { MayorIgual $$ }
	'<='           { MenorIgual $$ }
	'!='           { Diferente $$ }
	'||'           { BoolOr $$ }
	'&&'           { BoolAnd $$ }
	'='            { Asignacion $$ }
	'+'            { Mas $$ }
	'-'            { Menos $$ }
	'*'            { Por $$ }
	'/'            { Entre $$ }
	'('            { OpenParen $$ }
	')'            { CloseParen $$ }
	'{'            { OpenCurly $$ }
	'}'            { CloseCurly $$ }
	';'            { PuntoComa $$ }
	'%'            { Modulo $$ }
	'<'            { Menor $$ }
	'>'            { Mayor $$ }
	'&'            { BitAnd $$ }
	'|'            { BitOr $$ }
	'['            { OpenBrackets $$ }
	']'            { CloseBrackets $$ }
	','            { Coma $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parsefc  rule  0
	All             rules 1, 2, 3, 4, 5, 6, 7, 8
	VarDeclarations rules 9, 10
	ManyTypes       rules 11, 12
	asteriscos      rules 13, 14
	basicType       rule  15
	Types           rules 16, 17, 18, 19, 20, 21, 22
	arrays          rules 23, 24
	variables       rules 25, 26, 27, 28, 29, 30
	VarDeclaration  rule  31
	StructVar       rule  32
	Struct          rule  33
	UnionVar        rule  34
	Union           rule  35
	Funcion         rules 36, 37
	FuncionNoArgs   rule  38
	FuncionConArgs  rule  39
	FuncionP2       rule  40
	FuncionP3       rule  41
	Block           rule  42
	Block2          rule  43
	Block3          rule  44
	Instruccion     rules 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57
	For             rule  58
	While           rule  59
	If              rules 60, 61
	BoolE2          rule  62
	BoolE           rule  63
	Asignacion      rule  64
	LLamada         rules 65, 66
	ParametrosIn    rules 67, 68
	Instrucciones   rules 69, 70, 71, 72
	Parametro       rules 73, 74
	Parametros      rules 75, 76
	AnomFun         rules 77, 78
	arr             rules 79, 80
	Atom            rules 81, 82, 83, 84, 85, 86
	Atom2           rules 87, 88, 89
	Exp             rules 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	type           shift, and enter state 12
	functionType   shift, and enter state 13
	union          shift, and enter state 14
	struct         shift, and enter state 15
	unsigned       shift, and enter state 16
	'('            shift, and enter state 17

	All            goto state 18
	basicType      goto state 3
	Types          goto state 4
	variables      goto state 5
	VarDeclaration goto state 6
	Struct         goto state 7
	Union          goto state 8
	Funcion        goto state 9
	FuncionNoArgs  goto state 10
	FuncionConArgs goto state 11

State 1


	type           shift, and enter state 12
	functionType   shift, and enter state 13
	union          shift, and enter state 14
	struct         shift, and enter state 15
	unsigned       shift, and enter state 16
	'('            shift, and enter state 17

	All            goto state 2
	basicType      goto state 3
	Types          goto state 4
	variables      goto state 5
	VarDeclaration goto state 6
	Struct         goto state 7
	Union          goto state 8
	Funcion        goto state 9
	FuncionNoArgs  goto state 10
	FuncionConArgs goto state 11

State 2

	All -> All . Funcion                                (rule 1)
	All -> All . Struct                                 (rule 3)
	All -> All . Union                                  (rule 5)
	All -> All . VarDeclaration                         (rule 7)

	type           shift, and enter state 12
	functionType   shift, and enter state 13
	union          shift, and enter state 14
	struct         shift, and enter state 15
	unsigned       shift, and enter state 16
	'('            shift, and enter state 17

	basicType      goto state 3
	Types          goto state 4
	variables      goto state 5
	VarDeclaration goto state 19
	Struct         goto state 20
	Union          goto state 21
	Funcion        goto state 22
	FuncionNoArgs  goto state 10
	FuncionConArgs goto state 11

State 3

	Types -> basicType .                                (rule 16)

	var            reduce using rule 16
	'*'            reduce using rule 16
	')'            reduce using rule 16
	','            reduce using rule 16


State 4

	variables -> Types . var                            (rule 28)
	variables -> Types . asteriscos var                 (rule 29)
	variables -> Types . var arrays                     (rule 30)
	FuncionNoArgs -> Types . var '(' ')'                (rule 38)
	FuncionConArgs -> Types . var FuncionP2 Parametros ')'    (rule 39)

	var            shift, and enter state 39
	'*'            shift, and enter state 40

	asteriscos     goto state 38

State 5

	variables -> variables . ',' var                    (rule 25)
	variables -> variables . ',' var arrays             (rule 26)
	variables -> variables . ',' asteriscos var         (rule 27)
	VarDeclaration -> variables . ';'                   (rule 31)

	';'            shift, and enter state 36
	','            shift, and enter state 37


State 6

	All -> VarDeclaration .                             (rule 8)

	type           reduce using rule 8
	functionType   reduce using rule 8
	union          reduce using rule 8
	struct         reduce using rule 8
	unsigned       reduce using rule 8
	'('            reduce using rule 8
	%eof           reduce using rule 8


State 7

	All -> Struct .                                     (rule 4)

	type           reduce using rule 4
	functionType   reduce using rule 4
	union          reduce using rule 4
	struct         reduce using rule 4
	unsigned       reduce using rule 4
	'('            reduce using rule 4
	%eof           reduce using rule 4


State 8

	All -> Union .                                      (rule 6)

	type           reduce using rule 6
	functionType   reduce using rule 6
	union          reduce using rule 6
	struct         reduce using rule 6
	unsigned       reduce using rule 6
	'('            reduce using rule 6
	%eof           reduce using rule 6


State 9

	All -> Funcion .                                    (rule 2)

	type           reduce using rule 2
	functionType   reduce using rule 2
	union          reduce using rule 2
	struct         reduce using rule 2
	unsigned       reduce using rule 2
	'('            reduce using rule 2
	%eof           reduce using rule 2


State 10

	Funcion -> FuncionNoArgs . Block                    (rule 37)

	'{'            shift, and enter state 34

	Block          goto state 35
	Block2         goto state 33

State 11

	Funcion -> FuncionConArgs . Block FuncionP3         (rule 36)

	'{'            shift, and enter state 34

	Block          goto state 32
	Block2         goto state 33

State 12

	basicType -> type .                                 (rule 15)

	var            reduce using rule 15
	'*'            reduce using rule 15
	')'            reduce using rule 15
	','            reduce using rule 15


State 13

	Types -> functionType . '(' Types ')' '(' ManyTypes ')'    (rule 20)
	Types -> functionType . '(' Types ')' '(' ')'       (rule 21)

	'('            shift, and enter state 31


State 14

	Types -> union . var                                (rule 19)
	Union -> union . UnionVar Block2 VarDeclarations Block3 ';'    (rule 35)

	var            shift, and enter state 30

	UnionVar       goto state 29

State 15

	Types -> struct . var                               (rule 18)
	Struct -> struct . StructVar Block2 VarDeclarations Block3 ';'    (rule 33)

	var            shift, and enter state 28

	StructVar      goto state 27

State 16

	Types -> unsigned . basicType                       (rule 17)

	type           shift, and enter state 12

	basicType      goto state 26

State 17

	Types -> '(' . Types asteriscos ')'                 (rule 22)

	type           shift, and enter state 12
	functionType   shift, and enter state 13
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	'('            shift, and enter state 17

	basicType      goto state 3
	Types          goto state 23

State 18

	%start_parsefc -> All .                             (rule 0)
	All -> All . Funcion                                (rule 1)
	All -> All . Struct                                 (rule 3)
	All -> All . Union                                  (rule 5)
	All -> All . VarDeclaration                         (rule 7)

	type           shift, and enter state 12
	functionType   shift, and enter state 13
	union          shift, and enter state 14
	struct         shift, and enter state 15
	unsigned       shift, and enter state 16
	'('            shift, and enter state 17
	%eof           accept

	basicType      goto state 3
	Types          goto state 4
	variables      goto state 5
	VarDeclaration goto state 19
	Struct         goto state 20
	Union          goto state 21
	Funcion        goto state 22
	FuncionNoArgs  goto state 10
	FuncionConArgs goto state 11

State 19

	All -> All VarDeclaration .                         (rule 7)

	type           reduce using rule 7
	functionType   reduce using rule 7
	union          reduce using rule 7
	struct         reduce using rule 7
	unsigned       reduce using rule 7
	'('            reduce using rule 7
	%eof           reduce using rule 7


State 20

	All -> All Struct .                                 (rule 3)

	type           reduce using rule 3
	functionType   reduce using rule 3
	union          reduce using rule 3
	struct         reduce using rule 3
	unsigned       reduce using rule 3
	'('            reduce using rule 3
	%eof           reduce using rule 3


State 21

	All -> All Union .                                  (rule 5)

	type           reduce using rule 5
	functionType   reduce using rule 5
	union          reduce using rule 5
	struct         reduce using rule 5
	unsigned       reduce using rule 5
	'('            reduce using rule 5
	%eof           reduce using rule 5


State 22

	All -> All Funcion .                                (rule 1)

	type           reduce using rule 1
	functionType   reduce using rule 1
	union          reduce using rule 1
	struct         reduce using rule 1
	unsigned       reduce using rule 1
	'('            reduce using rule 1
	%eof           reduce using rule 1


State 23

	Types -> '(' Types . asteriscos ')'                 (rule 22)

	'*'            shift, and enter state 40

	asteriscos     goto state 86

State 24

	Types -> union . var                                (rule 19)

	var            shift, and enter state 85


State 25

	Types -> struct . var                               (rule 18)

	var            shift, and enter state 84


State 26

	Types -> unsigned basicType .                       (rule 17)

	var            reduce using rule 17
	'*'            reduce using rule 17
	')'            reduce using rule 17
	','            reduce using rule 17


State 27

	Struct -> struct StructVar . Block2 VarDeclarations Block3 ';'    (rule 33)

	'{'            shift, and enter state 34

	Block2         goto state 83

State 28

	Types -> struct var .                               (rule 18)
	StructVar -> var .                                  (rule 32)

	var            reduce using rule 18
	'*'            reduce using rule 18
	'{'            reduce using rule 32


State 29

	Union -> union UnionVar . Block2 VarDeclarations Block3 ';'    (rule 35)

	'{'            shift, and enter state 34

	Block2         goto state 82

State 30

	Types -> union var .                                (rule 19)
	UnionVar -> var .                                   (rule 34)

	var            reduce using rule 19
	'*'            reduce using rule 19
	'{'            reduce using rule 34


State 31

	Types -> functionType '(' . Types ')' '(' ManyTypes ')'    (rule 20)
	Types -> functionType '(' . Types ')' '(' ')'       (rule 21)

	type           shift, and enter state 12
	functionType   shift, and enter state 13
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	'('            shift, and enter state 17

	basicType      goto state 3
	Types          goto state 81

State 32

	Funcion -> FuncionConArgs Block . FuncionP3         (rule 36)

	type           reduce using rule 41
	functionType   reduce using rule 41
	union          reduce using rule 41
	struct         reduce using rule 41
	unsigned       reduce using rule 41
	'('            reduce using rule 41
	%eof           reduce using rule 41

	FuncionP3      goto state 80

State 33

	Block -> Block2 . Instrucciones Block3              (rule 42)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	type           shift, and enter state 12
	functionType   shift, and enter state 13
	bool           shift, and enter state 66
	if             shift, and enter state 67
	while          shift, and enter state 68
	for            shift, and enter state 69
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	continue       shift, and enter state 70
	break          shift, and enter state 71
	return         shift, and enter state 72
	read           shift, and enter state 73
	write          shift, and enter state 74
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 78
	'{'            shift, and enter state 34
	';'            shift, and enter state 79

	basicType      goto state 3
	Types          goto state 49
	variables      goto state 5
	VarDeclaration goto state 50
	Block          goto state 51
	Block2         goto state 33
	Instruccion    goto state 52
	For            goto state 53
	While          goto state 54
	If             goto state 55
	Asignacion     goto state 56
	LLamada        goto state 57
	Instrucciones  goto state 58
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 61
	Exp            goto state 62

State 34

	Block2 -> '{' .                                     (rule 43)

	var            reduce using rule 43
	int            reduce using rule 43
	float          reduce using rule 43
	type           reduce using rule 43
	functionType   reduce using rule 43
	bool           reduce using rule 43
	if             reduce using rule 43
	while          reduce using rule 43
	for            reduce using rule 43
	union          reduce using rule 43
	struct         reduce using rule 43
	unsigned       reduce using rule 43
	continue       reduce using rule 43
	break          reduce using rule 43
	return         reduce using rule 43
	read           reduce using rule 43
	write          reduce using rule 43
	str            reduce using rule 43
	'-'            reduce using rule 43
	'*'            reduce using rule 43
	'('            reduce using rule 43
	'{'            reduce using rule 43
	';'            reduce using rule 43


State 35

	Funcion -> FuncionNoArgs Block .                    (rule 37)

	type           reduce using rule 37
	functionType   reduce using rule 37
	union          reduce using rule 37
	struct         reduce using rule 37
	unsigned       reduce using rule 37
	'('            reduce using rule 37
	%eof           reduce using rule 37


State 36

	VarDeclaration -> variables ';' .                   (rule 31)

	var            reduce using rule 31
	int            reduce using rule 31
	float          reduce using rule 31
	type           reduce using rule 31
	functionType   reduce using rule 31
	bool           reduce using rule 31
	if             reduce using rule 31
	while          reduce using rule 31
	for            reduce using rule 31
	union          reduce using rule 31
	struct         reduce using rule 31
	unsigned       reduce using rule 31
	continue       reduce using rule 31
	break          reduce using rule 31
	return         reduce using rule 31
	read           reduce using rule 31
	write          reduce using rule 31
	str            reduce using rule 31
	'-'            reduce using rule 31
	'*'            reduce using rule 31
	'('            reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	';'            reduce using rule 31
	%eof           reduce using rule 31


State 37

	variables -> variables ',' . var                    (rule 25)
	variables -> variables ',' . var arrays             (rule 26)
	variables -> variables ',' . asteriscos var         (rule 27)

	var            shift, and enter state 48
	'*'            shift, and enter state 40

	asteriscos     goto state 47

State 38

	asteriscos -> asteriscos . '*'                      (rule 13)
	variables -> Types asteriscos . var                 (rule 29)

	var            shift, and enter state 45
	'*'            shift, and enter state 46


State 39

	variables -> Types var .                            (rule 28)
	variables -> Types var . arrays                     (rule 30)
	FuncionNoArgs -> Types var . '(' ')'                (rule 38)
	FuncionConArgs -> Types var . FuncionP2 Parametros ')'    (rule 39)

	'('            shift, and enter state 43
	';'            reduce using rule 28
	'['            shift, and enter state 44
	','            reduce using rule 28

	arrays         goto state 41
	FuncionP2      goto state 42

State 40

	asteriscos -> '*' .                                 (rule 14)

	var            reduce using rule 14
	'*'            reduce using rule 14
	')'            reduce using rule 14


State 41

	arrays -> arrays . '[' int ']'                      (rule 23)
	variables -> Types var arrays .                     (rule 30)

	';'            reduce using rule 30
	'['            shift, and enter state 144
	','            reduce using rule 30


State 42

	FuncionConArgs -> Types var FuncionP2 . Parametros ')'    (rule 39)

	type           shift, and enter state 12
	functionType   shift, and enter state 13
	ref            shift, and enter state 143
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	'('            shift, and enter state 17

	basicType      goto state 3
	Types          goto state 140
	Parametro      goto state 141
	Parametros     goto state 142

State 43

	FuncionNoArgs -> Types var '(' . ')'                (rule 38)
	FuncionP2 -> '(' .                                  (rule 40)

	type           reduce using rule 40
	functionType   reduce using rule 40
	ref            reduce using rule 40
	union          reduce using rule 40
	struct         reduce using rule 40
	unsigned       reduce using rule 40
	'('            reduce using rule 40
	')'            shift, and enter state 139


State 44

	arrays -> '[' . int ']'                             (rule 24)

	int            shift, and enter state 138


State 45

	variables -> Types asteriscos var .                 (rule 29)

	';'            reduce using rule 29
	','            reduce using rule 29


State 46

	asteriscos -> asteriscos '*' .                      (rule 13)

	var            reduce using rule 13
	'*'            reduce using rule 13
	')'            reduce using rule 13


State 47

	asteriscos -> asteriscos . '*'                      (rule 13)
	variables -> variables ',' asteriscos . var         (rule 27)

	var            shift, and enter state 137
	'*'            shift, and enter state 46


State 48

	variables -> variables ',' var .                    (rule 25)
	variables -> variables ',' var . arrays             (rule 26)

	';'            reduce using rule 25
	'['            shift, and enter state 44
	','            reduce using rule 25

	arrays         goto state 136

State 49

	variables -> Types . var                            (rule 28)
	variables -> Types . asteriscos var                 (rule 29)
	variables -> Types . var arrays                     (rule 30)

	var            shift, and enter state 135
	'*'            shift, and enter state 40

	asteriscos     goto state 38

State 50

	Instrucciones -> VarDeclaration .                   (rule 72)

	var            reduce using rule 72
	int            reduce using rule 72
	float          reduce using rule 72
	type           reduce using rule 72
	functionType   reduce using rule 72
	bool           reduce using rule 72
	if             reduce using rule 72
	while          reduce using rule 72
	for            reduce using rule 72
	union          reduce using rule 72
	struct         reduce using rule 72
	unsigned       reduce using rule 72
	continue       reduce using rule 72
	break          reduce using rule 72
	return         reduce using rule 72
	read           reduce using rule 72
	write          reduce using rule 72
	str            reduce using rule 72
	'-'            reduce using rule 72
	'*'            reduce using rule 72
	'('            reduce using rule 72
	'{'            reduce using rule 72
	'}'            reduce using rule 72
	';'            reduce using rule 72


State 51

	Instruccion -> Block .                              (rule 45)

	var            reduce using rule 45
	int            reduce using rule 45
	float          reduce using rule 45
	type           reduce using rule 45
	functionType   reduce using rule 45
	bool           reduce using rule 45
	if             reduce using rule 45
	while          reduce using rule 45
	for            reduce using rule 45
	union          reduce using rule 45
	struct         reduce using rule 45
	unsigned       reduce using rule 45
	continue       reduce using rule 45
	break          reduce using rule 45
	return         reduce using rule 45
	read           reduce using rule 45
	write          reduce using rule 45
	str            reduce using rule 45
	'-'            reduce using rule 45
	'*'            reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	';'            reduce using rule 45


State 52

	Instrucciones -> Instruccion .                      (rule 70)

	var            reduce using rule 70
	int            reduce using rule 70
	float          reduce using rule 70
	type           reduce using rule 70
	functionType   reduce using rule 70
	bool           reduce using rule 70
	if             reduce using rule 70
	while          reduce using rule 70
	for            reduce using rule 70
	union          reduce using rule 70
	struct         reduce using rule 70
	unsigned       reduce using rule 70
	continue       reduce using rule 70
	break          reduce using rule 70
	return         reduce using rule 70
	read           reduce using rule 70
	write          reduce using rule 70
	str            reduce using rule 70
	'-'            reduce using rule 70
	'*'            reduce using rule 70
	'('            reduce using rule 70
	'{'            reduce using rule 70
	'}'            reduce using rule 70
	';'            reduce using rule 70


State 53

	Instruccion -> For .                                (rule 46)

	var            reduce using rule 46
	int            reduce using rule 46
	float          reduce using rule 46
	type           reduce using rule 46
	functionType   reduce using rule 46
	bool           reduce using rule 46
	if             reduce using rule 46
	while          reduce using rule 46
	for            reduce using rule 46
	union          reduce using rule 46
	struct         reduce using rule 46
	unsigned       reduce using rule 46
	continue       reduce using rule 46
	break          reduce using rule 46
	return         reduce using rule 46
	read           reduce using rule 46
	write          reduce using rule 46
	str            reduce using rule 46
	'-'            reduce using rule 46
	'*'            reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46
	';'            reduce using rule 46


State 54

	Instruccion -> While .                              (rule 47)

	var            reduce using rule 47
	int            reduce using rule 47
	float          reduce using rule 47
	type           reduce using rule 47
	functionType   reduce using rule 47
	bool           reduce using rule 47
	if             reduce using rule 47
	while          reduce using rule 47
	for            reduce using rule 47
	union          reduce using rule 47
	struct         reduce using rule 47
	unsigned       reduce using rule 47
	continue       reduce using rule 47
	break          reduce using rule 47
	return         reduce using rule 47
	read           reduce using rule 47
	write          reduce using rule 47
	str            reduce using rule 47
	'-'            reduce using rule 47
	'*'            reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47
	';'            reduce using rule 47


State 55

	Instruccion -> If .                                 (rule 48)

	var            reduce using rule 48
	int            reduce using rule 48
	float          reduce using rule 48
	type           reduce using rule 48
	functionType   reduce using rule 48
	bool           reduce using rule 48
	if             reduce using rule 48
	while          reduce using rule 48
	for            reduce using rule 48
	union          reduce using rule 48
	struct         reduce using rule 48
	unsigned       reduce using rule 48
	continue       reduce using rule 48
	break          reduce using rule 48
	return         reduce using rule 48
	read           reduce using rule 48
	write          reduce using rule 48
	str            reduce using rule 48
	'-'            reduce using rule 48
	'*'            reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'{'            reduce using rule 48
	'}'            reduce using rule 48
	';'            reduce using rule 48


State 56

	Instruccion -> Asignacion . ';'                     (rule 49)

	';'            shift, and enter state 134


State 57

	Atom -> LLamada .                                   (rule 81)

	'<<'           reduce using rule 81
	'>>'           reduce using rule 81
	'.'            reduce using rule 81
	'=='           reduce using rule 81
	'>='           reduce using rule 81
	'<='           reduce using rule 81
	'!='           reduce using rule 81
	'||'           reduce using rule 81
	'&&'           reduce using rule 81
	'='            reduce using rule 81
	'+'            reduce using rule 81
	'-'            reduce using rule 81
	'*'            reduce using rule 81
	'/'            reduce using rule 81
	')'            reduce using rule 81
	';'            reduce using rule 81
	'%'            reduce using rule 81
	'<'            reduce using rule 81
	'>'            reduce using rule 81
	'&'            reduce using rule 81
	'|'            reduce using rule 81
	']'            reduce using rule 81
	','            reduce using rule 81


State 58

	Block -> Block2 Instrucciones . Block3              (rule 42)
	Instrucciones -> Instrucciones . Instruccion        (rule 69)
	Instrucciones -> Instrucciones . VarDeclaration     (rule 71)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	type           shift, and enter state 12
	functionType   shift, and enter state 13
	bool           shift, and enter state 66
	if             shift, and enter state 67
	while          shift, and enter state 68
	for            shift, and enter state 69
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	continue       shift, and enter state 70
	break          shift, and enter state 71
	return         shift, and enter state 72
	read           shift, and enter state 73
	write          shift, and enter state 74
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 78
	'{'            shift, and enter state 34
	'}'            shift, and enter state 133
	';'            shift, and enter state 79

	basicType      goto state 3
	Types          goto state 49
	variables      goto state 5
	VarDeclaration goto state 130
	Block          goto state 51
	Block2         goto state 33
	Block3         goto state 131
	Instruccion    goto state 132
	For            goto state 53
	While          goto state 54
	If             goto state 55
	Asignacion     goto state 56
	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 61
	Exp            goto state 62

State 59

	Atom -> AnomFun .                                   (rule 86)

	'<<'           reduce using rule 86
	'>>'           reduce using rule 86
	'.'            reduce using rule 86
	'=='           reduce using rule 86
	'>='           reduce using rule 86
	'<='           reduce using rule 86
	'!='           reduce using rule 86
	'||'           reduce using rule 86
	'&&'           reduce using rule 86
	'='            reduce using rule 86
	'+'            reduce using rule 86
	'-'            reduce using rule 86
	'*'            reduce using rule 86
	'/'            reduce using rule 86
	')'            reduce using rule 86
	';'            reduce using rule 86
	'%'            reduce using rule 86
	'<'            reduce using rule 86
	'>'            reduce using rule 86
	'&'            reduce using rule 86
	'|'            reduce using rule 86
	']'            reduce using rule 86
	','            reduce using rule 86


State 60

	Exp -> Atom .                                       (rule 110)

	'<<'           reduce using rule 110
	'>>'           reduce using rule 110
	'.'            reduce using rule 110
	'=='           reduce using rule 110
	'>='           reduce using rule 110
	'<='           reduce using rule 110
	'!='           reduce using rule 110
	'||'           reduce using rule 110
	'&&'           reduce using rule 110
	'='            reduce using rule 110
	'+'            reduce using rule 110
	'-'            reduce using rule 110
	'*'            reduce using rule 110
	'/'            reduce using rule 110
	')'            reduce using rule 110
	';'            reduce using rule 110
	'%'            reduce using rule 110
	'<'            reduce using rule 110
	'>'            reduce using rule 110
	'&'            reduce using rule 110
	'|'            reduce using rule 110
	']'            reduce using rule 110
	','            reduce using rule 110


State 61

	Asignacion -> Atom2 . '=' Exp                       (rule 64)
	Exp -> Atom2 .                                      (rule 109)

	'<<'           reduce using rule 109
	'>>'           reduce using rule 109
	'.'            reduce using rule 109
	'=='           reduce using rule 109
	'>='           reduce using rule 109
	'<='           reduce using rule 109
	'!='           reduce using rule 109
	'||'           reduce using rule 109
	'&&'           reduce using rule 109
	'='            shift, and enter state 129
	'+'            reduce using rule 109
	'-'            reduce using rule 109
	'*'            reduce using rule 109
	'/'            reduce using rule 109
	';'            reduce using rule 109
	'%'            reduce using rule 109
	'<'            reduce using rule 109
	'>'            reduce using rule 109
	'&'            reduce using rule 109
	'|'            reduce using rule 109


State 62

	Instruccion -> Exp . ';'                            (rule 50)
	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           shift, and enter state 113
	'>='           shift, and enter state 114
	'<='           shift, and enter state 115
	'!='           shift, and enter state 116
	'||'           shift, and enter state 117
	'&&'           shift, and enter state 118
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	';'            shift, and enter state 123
	'%'            shift, and enter state 124
	'<'            shift, and enter state 125
	'>'            shift, and enter state 126
	'&'            shift, and enter state 127
	'|'            shift, and enter state 128


State 63

	LLamada -> var . '(' ParametrosIn ')'               (rule 65)
	LLamada -> var . '(' ')'                            (rule 66)
	Atom2 -> var . arr                                  (rule 87)

	'<<'           reduce using rule 80
	'>>'           reduce using rule 80
	'.'            reduce using rule 80
	'=='           reduce using rule 80
	'>='           reduce using rule 80
	'<='           reduce using rule 80
	'!='           reduce using rule 80
	'||'           reduce using rule 80
	'&&'           reduce using rule 80
	'='            reduce using rule 80
	'+'            reduce using rule 80
	'-'            reduce using rule 80
	'*'            reduce using rule 80
	'/'            reduce using rule 80
	'('            shift, and enter state 109
	')'            reduce using rule 80
	';'            reduce using rule 80
	'%'            reduce using rule 80
	'<'            reduce using rule 80
	'>'            reduce using rule 80
	'&'            reduce using rule 80
	'|'            reduce using rule 80
	'['            reduce using rule 80
	']'            reduce using rule 80
	','            reduce using rule 80

	arr            goto state 108

State 64

	Atom -> int .                                       (rule 82)

	'<<'           reduce using rule 82
	'>>'           reduce using rule 82
	'.'            reduce using rule 82
	'=='           reduce using rule 82
	'>='           reduce using rule 82
	'<='           reduce using rule 82
	'!='           reduce using rule 82
	'||'           reduce using rule 82
	'&&'           reduce using rule 82
	'='            reduce using rule 82
	'+'            reduce using rule 82
	'-'            reduce using rule 82
	'*'            reduce using rule 82
	'/'            reduce using rule 82
	')'            reduce using rule 82
	';'            reduce using rule 82
	'%'            reduce using rule 82
	'<'            reduce using rule 82
	'>'            reduce using rule 82
	'&'            reduce using rule 82
	'|'            reduce using rule 82
	']'            reduce using rule 82
	','            reduce using rule 82


State 65

	Atom -> float .                                     (rule 83)

	'<<'           reduce using rule 83
	'>>'           reduce using rule 83
	'.'            reduce using rule 83
	'=='           reduce using rule 83
	'>='           reduce using rule 83
	'<='           reduce using rule 83
	'!='           reduce using rule 83
	'||'           reduce using rule 83
	'&&'           reduce using rule 83
	'='            reduce using rule 83
	'+'            reduce using rule 83
	'-'            reduce using rule 83
	'*'            reduce using rule 83
	'/'            reduce using rule 83
	')'            reduce using rule 83
	';'            reduce using rule 83
	'%'            reduce using rule 83
	'<'            reduce using rule 83
	'>'            reduce using rule 83
	'&'            reduce using rule 83
	'|'            reduce using rule 83
	']'            reduce using rule 83
	','            reduce using rule 83


State 66

	Atom -> bool .                                      (rule 84)

	'<<'           reduce using rule 84
	'>>'           reduce using rule 84
	'.'            reduce using rule 84
	'=='           reduce using rule 84
	'>='           reduce using rule 84
	'<='           reduce using rule 84
	'!='           reduce using rule 84
	'||'           reduce using rule 84
	'&&'           reduce using rule 84
	'='            reduce using rule 84
	'+'            reduce using rule 84
	'-'            reduce using rule 84
	'*'            reduce using rule 84
	'/'            reduce using rule 84
	')'            reduce using rule 84
	';'            reduce using rule 84
	'%'            reduce using rule 84
	'<'            reduce using rule 84
	'>'            reduce using rule 84
	'&'            reduce using rule 84
	'|'            reduce using rule 84
	']'            reduce using rule 84
	','            reduce using rule 84


State 67

	If -> if . BoolE Block                              (rule 60)
	If -> if . BoolE Block else Block                   (rule 61)

	'('            shift, and enter state 106

	BoolE          goto state 107

State 68

	While -> while . BoolE Instruccion                  (rule 59)

	'('            shift, and enter state 106

	BoolE          goto state 105

State 69

	For -> for . '(' Instruccion BoolE2 Instruccion ')' Instruccion    (rule 58)

	'('            shift, and enter state 104


State 70

	Instruccion -> continue . ';'                       (rule 52)

	';'            shift, and enter state 103


State 71

	Instruccion -> break . ';'                          (rule 51)

	';'            shift, and enter state 102


State 72

	Instruccion -> return . ';'                         (rule 53)
	Instruccion -> return . Exp ';'                     (rule 54)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96
	';'            shift, and enter state 101

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 100

State 73

	Instruccion -> read . var ';'                       (rule 55)

	var            shift, and enter state 99


State 74

	Instruccion -> write . Exp ';'                      (rule 56)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 98

State 75

	Atom -> str .                                       (rule 85)

	'<<'           reduce using rule 85
	'>>'           reduce using rule 85
	'.'            reduce using rule 85
	'=='           reduce using rule 85
	'>='           reduce using rule 85
	'<='           reduce using rule 85
	'!='           reduce using rule 85
	'||'           reduce using rule 85
	'&&'           reduce using rule 85
	'='            reduce using rule 85
	'+'            reduce using rule 85
	'-'            reduce using rule 85
	'*'            reduce using rule 85
	'/'            reduce using rule 85
	')'            reduce using rule 85
	';'            reduce using rule 85
	'%'            reduce using rule 85
	'<'            reduce using rule 85
	'>'            reduce using rule 85
	'&'            reduce using rule 85
	'|'            reduce using rule 85
	']'            reduce using rule 85
	','            reduce using rule 85


State 76

	Exp -> '-' . Exp                                    (rule 108)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 97

State 77

	Atom2 -> '*' . Exp                                  (rule 89)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 95

State 78

	Types -> '(' . Types asteriscos ')'                 (rule 22)
	AnomFun -> '(' . Types ')' '(' Parametros ')' '{' Instrucciones '}'    (rule 77)
	AnomFun -> '(' . Types ')' '(' ')' '{' Instrucciones '}'    (rule 78)
	Exp -> '(' . Exp ')'                                (rule 107)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	type           shift, and enter state 12
	functionType   shift, and enter state 13
	bool           shift, and enter state 66
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 78

	basicType      goto state 3
	Types          goto state 92
	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 94

State 79

	Instruccion -> ';' .                                (rule 57)

	var            reduce using rule 57
	int            reduce using rule 57
	float          reduce using rule 57
	type           reduce using rule 57
	functionType   reduce using rule 57
	bool           reduce using rule 57
	if             reduce using rule 57
	while          reduce using rule 57
	for            reduce using rule 57
	union          reduce using rule 57
	struct         reduce using rule 57
	unsigned       reduce using rule 57
	continue       reduce using rule 57
	break          reduce using rule 57
	return         reduce using rule 57
	read           reduce using rule 57
	write          reduce using rule 57
	str            reduce using rule 57
	'-'            reduce using rule 57
	'*'            reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'{'            reduce using rule 57
	'}'            reduce using rule 57
	';'            reduce using rule 57


State 80

	Funcion -> FuncionConArgs Block FuncionP3 .         (rule 36)

	type           reduce using rule 36
	functionType   reduce using rule 36
	union          reduce using rule 36
	struct         reduce using rule 36
	unsigned       reduce using rule 36
	'('            reduce using rule 36
	%eof           reduce using rule 36


State 81

	Types -> functionType '(' Types . ')' '(' ManyTypes ')'    (rule 20)
	Types -> functionType '(' Types . ')' '(' ')'       (rule 21)

	')'            shift, and enter state 91


State 82

	Union -> union UnionVar Block2 . VarDeclarations Block3 ';'    (rule 35)

	type           shift, and enter state 12
	functionType   shift, and enter state 13
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	'('            shift, and enter state 17

	VarDeclarationsgoto state 90
	basicType      goto state 3
	Types          goto state 49
	variables      goto state 5
	VarDeclaration goto state 89

State 83

	Struct -> struct StructVar Block2 . VarDeclarations Block3 ';'    (rule 33)

	type           shift, and enter state 12
	functionType   shift, and enter state 13
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	'('            shift, and enter state 17

	VarDeclarationsgoto state 88
	basicType      goto state 3
	Types          goto state 49
	variables      goto state 5
	VarDeclaration goto state 89

State 84

	Types -> struct var .                               (rule 18)

	var            reduce using rule 18
	'*'            reduce using rule 18
	')'            reduce using rule 18
	','            reduce using rule 18


State 85

	Types -> union var .                                (rule 19)

	var            reduce using rule 19
	'*'            reduce using rule 19
	')'            reduce using rule 19
	','            reduce using rule 19


State 86

	asteriscos -> asteriscos . '*'                      (rule 13)
	Types -> '(' Types asteriscos . ')'                 (rule 22)

	'*'            shift, and enter state 46
	')'            shift, and enter state 87


State 87

	Types -> '(' Types asteriscos ')' .                 (rule 22)

	var            reduce using rule 22
	'*'            reduce using rule 22
	')'            reduce using rule 22
	','            reduce using rule 22


State 88

	VarDeclarations -> VarDeclarations . VarDeclaration    (rule 9)
	Struct -> struct StructVar Block2 VarDeclarations . Block3 ';'    (rule 33)

	type           shift, and enter state 12
	functionType   shift, and enter state 13
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	'('            shift, and enter state 17
	'}'            shift, and enter state 133

	basicType      goto state 3
	Types          goto state 49
	variables      goto state 5
	VarDeclaration goto state 185
	Block3         goto state 187

State 89

	VarDeclarations -> VarDeclaration .                 (rule 10)

	type           reduce using rule 10
	functionType   reduce using rule 10
	union          reduce using rule 10
	struct         reduce using rule 10
	unsigned       reduce using rule 10
	'('            reduce using rule 10
	'}'            reduce using rule 10


State 90

	VarDeclarations -> VarDeclarations . VarDeclaration    (rule 9)
	Union -> union UnionVar Block2 VarDeclarations . Block3 ';'    (rule 35)

	type           shift, and enter state 12
	functionType   shift, and enter state 13
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	'('            shift, and enter state 17
	'}'            shift, and enter state 133

	basicType      goto state 3
	Types          goto state 49
	variables      goto state 5
	VarDeclaration goto state 185
	Block3         goto state 186

State 91

	Types -> functionType '(' Types ')' . '(' ManyTypes ')'    (rule 20)
	Types -> functionType '(' Types ')' . '(' ')'       (rule 21)

	'('            shift, and enter state 184


State 92

	Types -> '(' Types . asteriscos ')'                 (rule 22)
	AnomFun -> '(' Types . ')' '(' Parametros ')' '{' Instrucciones '}'    (rule 77)
	AnomFun -> '(' Types . ')' '(' ')' '{' Instrucciones '}'    (rule 78)

	'*'            shift, and enter state 40
	')'            shift, and enter state 183

	asteriscos     goto state 86

State 93

	Exp -> Atom2 .                                      (rule 109)

	'<<'           reduce using rule 109
	'>>'           reduce using rule 109
	'.'            reduce using rule 109
	'=='           reduce using rule 109
	'>='           reduce using rule 109
	'<='           reduce using rule 109
	'!='           reduce using rule 109
	'||'           reduce using rule 109
	'&&'           reduce using rule 109
	'='            reduce using rule 109
	'+'            reduce using rule 109
	'-'            reduce using rule 109
	'*'            reduce using rule 109
	'/'            reduce using rule 109
	')'            reduce using rule 109
	';'            reduce using rule 109
	'%'            reduce using rule 109
	'<'            reduce using rule 109
	'>'            reduce using rule 109
	'&'            reduce using rule 109
	'|'            reduce using rule 109
	']'            reduce using rule 109
	','            reduce using rule 109


State 94

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)
	Exp -> '(' Exp . ')'                                (rule 107)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           shift, and enter state 113
	'>='           shift, and enter state 114
	'<='           shift, and enter state 115
	'!='           shift, and enter state 116
	'||'           shift, and enter state 117
	'&&'           shift, and enter state 118
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            shift, and enter state 182
	'%'            shift, and enter state 124
	'<'            shift, and enter state 125
	'>'            shift, and enter state 126
	'&'            shift, and enter state 127
	'|'            shift, and enter state 128


State 95

	Atom2 -> Exp . '.' var                              (rule 88)
	Atom2 -> '*' Exp .                                  (rule 89)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           reduce using rule 89
	'>>'           reduce using rule 89
	'.'            shift, and enter state 112
	'=='           reduce using rule 89
	'>='           reduce using rule 89
	'<='           reduce using rule 89
	'!='           reduce using rule 89
	'||'           reduce using rule 89
	'&&'           reduce using rule 89
	'='            reduce using rule 89
	'+'            reduce using rule 89
	'-'            reduce using rule 89
	'*'            reduce using rule 89
	'/'            reduce using rule 89
	')'            reduce using rule 89
	';'            reduce using rule 89
	'%'            reduce using rule 89
	'<'            reduce using rule 89
	'>'            reduce using rule 89
	'&'            reduce using rule 89
	'|'            reduce using rule 89
	']'            reduce using rule 89
	','            reduce using rule 89


State 96

	AnomFun -> '(' . Types ')' '(' Parametros ')' '{' Instrucciones '}'    (rule 77)
	AnomFun -> '(' . Types ')' '(' ')' '{' Instrucciones '}'    (rule 78)
	Exp -> '(' . Exp ')'                                (rule 107)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	type           shift, and enter state 12
	functionType   shift, and enter state 13
	bool           shift, and enter state 66
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 78

	basicType      goto state 3
	Types          goto state 181
	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 94

State 97

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)
	Exp -> '-' Exp .                                    (rule 108)

	'<<'           reduce using rule 108
	'>>'           reduce using rule 108
	'.'            shift, and enter state 112
	'=='           reduce using rule 108
	'>='           reduce using rule 108
	'<='           reduce using rule 108
	'!='           reduce using rule 108
	'||'           reduce using rule 108
	'&&'           reduce using rule 108
	'='            reduce using rule 108
	'+'            reduce using rule 108
	'-'            reduce using rule 108
	'*'            reduce using rule 108
	'/'            reduce using rule 108
	')'            reduce using rule 108
	';'            reduce using rule 108
	'%'            reduce using rule 108
	'<'            reduce using rule 108
	'>'            reduce using rule 108
	'&'            reduce using rule 108
	'|'            reduce using rule 108
	']'            reduce using rule 108
	','            reduce using rule 108


State 98

	Instruccion -> write Exp . ';'                      (rule 56)
	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           shift, and enter state 113
	'>='           shift, and enter state 114
	'<='           shift, and enter state 115
	'!='           shift, and enter state 116
	'||'           shift, and enter state 117
	'&&'           shift, and enter state 118
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	';'            shift, and enter state 180
	'%'            shift, and enter state 124
	'<'            shift, and enter state 125
	'>'            shift, and enter state 126
	'&'            shift, and enter state 127
	'|'            shift, and enter state 128


State 99

	Instruccion -> read var . ';'                       (rule 55)

	';'            shift, and enter state 179


State 100

	Instruccion -> return Exp . ';'                     (rule 54)
	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           shift, and enter state 113
	'>='           shift, and enter state 114
	'<='           shift, and enter state 115
	'!='           shift, and enter state 116
	'||'           shift, and enter state 117
	'&&'           shift, and enter state 118
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	';'            shift, and enter state 178
	'%'            shift, and enter state 124
	'<'            shift, and enter state 125
	'>'            shift, and enter state 126
	'&'            shift, and enter state 127
	'|'            shift, and enter state 128


State 101

	Instruccion -> return ';' .                         (rule 53)

	var            reduce using rule 53
	int            reduce using rule 53
	float          reduce using rule 53
	type           reduce using rule 53
	functionType   reduce using rule 53
	bool           reduce using rule 53
	if             reduce using rule 53
	while          reduce using rule 53
	for            reduce using rule 53
	union          reduce using rule 53
	struct         reduce using rule 53
	unsigned       reduce using rule 53
	continue       reduce using rule 53
	break          reduce using rule 53
	return         reduce using rule 53
	read           reduce using rule 53
	write          reduce using rule 53
	str            reduce using rule 53
	'-'            reduce using rule 53
	'*'            reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'{'            reduce using rule 53
	'}'            reduce using rule 53
	';'            reduce using rule 53


State 102

	Instruccion -> break ';' .                          (rule 51)

	var            reduce using rule 51
	int            reduce using rule 51
	float          reduce using rule 51
	type           reduce using rule 51
	functionType   reduce using rule 51
	bool           reduce using rule 51
	if             reduce using rule 51
	while          reduce using rule 51
	for            reduce using rule 51
	union          reduce using rule 51
	struct         reduce using rule 51
	unsigned       reduce using rule 51
	continue       reduce using rule 51
	break          reduce using rule 51
	return         reduce using rule 51
	read           reduce using rule 51
	write          reduce using rule 51
	str            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'{'            reduce using rule 51
	'}'            reduce using rule 51
	';'            reduce using rule 51


State 103

	Instruccion -> continue ';' .                       (rule 52)

	var            reduce using rule 52
	int            reduce using rule 52
	float          reduce using rule 52
	type           reduce using rule 52
	functionType   reduce using rule 52
	bool           reduce using rule 52
	if             reduce using rule 52
	while          reduce using rule 52
	for            reduce using rule 52
	union          reduce using rule 52
	struct         reduce using rule 52
	unsigned       reduce using rule 52
	continue       reduce using rule 52
	break          reduce using rule 52
	return         reduce using rule 52
	read           reduce using rule 52
	write          reduce using rule 52
	str            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'{'            reduce using rule 52
	'}'            reduce using rule 52
	';'            reduce using rule 52


State 104

	For -> for '(' . Instruccion BoolE2 Instruccion ')' Instruccion    (rule 58)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	if             shift, and enter state 67
	while          shift, and enter state 68
	for            shift, and enter state 69
	continue       shift, and enter state 70
	break          shift, and enter state 71
	return         shift, and enter state 72
	read           shift, and enter state 73
	write          shift, and enter state 74
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96
	'{'            shift, and enter state 34
	';'            shift, and enter state 79

	Block          goto state 51
	Block2         goto state 33
	Instruccion    goto state 177
	For            goto state 53
	While          goto state 54
	If             goto state 55
	Asignacion     goto state 56
	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 61
	Exp            goto state 62

State 105

	While -> while BoolE . Instruccion                  (rule 59)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	if             shift, and enter state 67
	while          shift, and enter state 68
	for            shift, and enter state 69
	continue       shift, and enter state 70
	break          shift, and enter state 71
	return         shift, and enter state 72
	read           shift, and enter state 73
	write          shift, and enter state 74
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96
	'{'            shift, and enter state 34
	';'            shift, and enter state 79

	Block          goto state 51
	Block2         goto state 33
	Instruccion    goto state 176
	For            goto state 53
	While          goto state 54
	If             goto state 55
	Asignacion     goto state 56
	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 61
	Exp            goto state 62

State 106

	BoolE -> '(' . Exp ')'                              (rule 63)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 175

State 107

	If -> if BoolE . Block                              (rule 60)
	If -> if BoolE . Block else Block                   (rule 61)

	'{'            shift, and enter state 34

	Block          goto state 174
	Block2         goto state 33

State 108

	arr -> arr . '[' Exp ']'                            (rule 79)
	Atom2 -> var arr .                                  (rule 87)

	'<<'           reduce using rule 87
	'>>'           reduce using rule 87
	'.'            reduce using rule 87
	'=='           reduce using rule 87
	'>='           reduce using rule 87
	'<='           reduce using rule 87
	'!='           reduce using rule 87
	'||'           reduce using rule 87
	'&&'           reduce using rule 87
	'='            reduce using rule 87
	'+'            reduce using rule 87
	'-'            reduce using rule 87
	'*'            reduce using rule 87
	'/'            reduce using rule 87
	')'            reduce using rule 87
	';'            reduce using rule 87
	'%'            reduce using rule 87
	'<'            reduce using rule 87
	'>'            reduce using rule 87
	'&'            reduce using rule 87
	'|'            reduce using rule 87
	'['            shift, and enter state 173
	']'            reduce using rule 87
	','            reduce using rule 87


State 109

	LLamada -> var '(' . ParametrosIn ')'               (rule 65)
	LLamada -> var '(' . ')'                            (rule 66)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96
	')'            shift, and enter state 172

	LLamada        goto state 57
	ParametrosIn   goto state 170
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 171

State 110

	Exp -> Exp '<<' . Exp                               (rule 94)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 169

State 111

	Exp -> Exp '>>' . Exp                               (rule 95)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 168

State 112

	Atom2 -> Exp '.' . var                              (rule 88)

	var            shift, and enter state 167


State 113

	Exp -> Exp '==' . Exp                               (rule 100)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 166

State 114

	Exp -> Exp '>=' . Exp                               (rule 99)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 165

State 115

	Exp -> Exp '<=' . Exp                               (rule 97)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 164

State 116

	Exp -> Exp '!=' . Exp                               (rule 101)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 163

State 117

	Exp -> Exp '||' . Exp                               (rule 106)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 162

State 118

	Exp -> Exp '&&' . Exp                               (rule 105)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 161

State 119

	Exp -> Exp '+' . Exp                                (rule 90)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 160

State 120

	Exp -> Exp '-' . Exp                                (rule 91)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 159

State 121

	Exp -> Exp '*' . Exp                                (rule 92)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 158

State 122

	Exp -> Exp '/' . Exp                                (rule 93)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 157

State 123

	Instruccion -> Exp ';' .                            (rule 50)

	var            reduce using rule 50
	int            reduce using rule 50
	float          reduce using rule 50
	type           reduce using rule 50
	functionType   reduce using rule 50
	bool           reduce using rule 50
	if             reduce using rule 50
	while          reduce using rule 50
	for            reduce using rule 50
	union          reduce using rule 50
	struct         reduce using rule 50
	unsigned       reduce using rule 50
	continue       reduce using rule 50
	break          reduce using rule 50
	return         reduce using rule 50
	read           reduce using rule 50
	write          reduce using rule 50
	str            reduce using rule 50
	'-'            reduce using rule 50
	'*'            reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'{'            reduce using rule 50
	'}'            reduce using rule 50
	';'            reduce using rule 50


State 124

	Exp -> Exp '%' . Exp                                (rule 103)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 156

State 125

	Exp -> Exp '<' . Exp                                (rule 96)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 155

State 126

	Exp -> Exp '>' . Exp                                (rule 98)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 154

State 127

	Exp -> Exp '&' . Exp                                (rule 102)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 153

State 128

	Exp -> Exp '|' . Exp                                (rule 104)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 152

State 129

	Asignacion -> Atom2 '=' . Exp                       (rule 64)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 151

State 130

	Instrucciones -> Instrucciones VarDeclaration .     (rule 71)

	var            reduce using rule 71
	int            reduce using rule 71
	float          reduce using rule 71
	type           reduce using rule 71
	functionType   reduce using rule 71
	bool           reduce using rule 71
	if             reduce using rule 71
	while          reduce using rule 71
	for            reduce using rule 71
	union          reduce using rule 71
	struct         reduce using rule 71
	unsigned       reduce using rule 71
	continue       reduce using rule 71
	break          reduce using rule 71
	return         reduce using rule 71
	read           reduce using rule 71
	write          reduce using rule 71
	str            reduce using rule 71
	'-'            reduce using rule 71
	'*'            reduce using rule 71
	'('            reduce using rule 71
	'{'            reduce using rule 71
	'}'            reduce using rule 71
	';'            reduce using rule 71


State 131

	Block -> Block2 Instrucciones Block3 .              (rule 42)

	var            reduce using rule 42
	int            reduce using rule 42
	float          reduce using rule 42
	type           reduce using rule 42
	functionType   reduce using rule 42
	bool           reduce using rule 42
	if             reduce using rule 42
	while          reduce using rule 42
	for            reduce using rule 42
	else           reduce using rule 42
	union          reduce using rule 42
	struct         reduce using rule 42
	unsigned       reduce using rule 42
	continue       reduce using rule 42
	break          reduce using rule 42
	return         reduce using rule 42
	read           reduce using rule 42
	write          reduce using rule 42
	str            reduce using rule 42
	'-'            reduce using rule 42
	'*'            reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	';'            reduce using rule 42
	%eof           reduce using rule 42


State 132

	Instrucciones -> Instrucciones Instruccion .        (rule 69)

	var            reduce using rule 69
	int            reduce using rule 69
	float          reduce using rule 69
	type           reduce using rule 69
	functionType   reduce using rule 69
	bool           reduce using rule 69
	if             reduce using rule 69
	while          reduce using rule 69
	for            reduce using rule 69
	union          reduce using rule 69
	struct         reduce using rule 69
	unsigned       reduce using rule 69
	continue       reduce using rule 69
	break          reduce using rule 69
	return         reduce using rule 69
	read           reduce using rule 69
	write          reduce using rule 69
	str            reduce using rule 69
	'-'            reduce using rule 69
	'*'            reduce using rule 69
	'('            reduce using rule 69
	'{'            reduce using rule 69
	'}'            reduce using rule 69
	';'            reduce using rule 69


State 133

	Block3 -> '}' .                                     (rule 44)

	var            reduce using rule 44
	int            reduce using rule 44
	float          reduce using rule 44
	type           reduce using rule 44
	functionType   reduce using rule 44
	bool           reduce using rule 44
	if             reduce using rule 44
	while          reduce using rule 44
	for            reduce using rule 44
	else           reduce using rule 44
	union          reduce using rule 44
	struct         reduce using rule 44
	unsigned       reduce using rule 44
	continue       reduce using rule 44
	break          reduce using rule 44
	return         reduce using rule 44
	read           reduce using rule 44
	write          reduce using rule 44
	str            reduce using rule 44
	'-'            reduce using rule 44
	'*'            reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	';'            reduce using rule 44
	%eof           reduce using rule 44


State 134

	Instruccion -> Asignacion ';' .                     (rule 49)

	var            reduce using rule 49
	int            reduce using rule 49
	float          reduce using rule 49
	type           reduce using rule 49
	functionType   reduce using rule 49
	bool           reduce using rule 49
	if             reduce using rule 49
	while          reduce using rule 49
	for            reduce using rule 49
	union          reduce using rule 49
	struct         reduce using rule 49
	unsigned       reduce using rule 49
	continue       reduce using rule 49
	break          reduce using rule 49
	return         reduce using rule 49
	read           reduce using rule 49
	write          reduce using rule 49
	str            reduce using rule 49
	'-'            reduce using rule 49
	'*'            reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'{'            reduce using rule 49
	'}'            reduce using rule 49
	';'            reduce using rule 49


State 135

	variables -> Types var .                            (rule 28)
	variables -> Types var . arrays                     (rule 30)

	';'            reduce using rule 28
	'['            shift, and enter state 44
	','            reduce using rule 28

	arrays         goto state 41

State 136

	arrays -> arrays . '[' int ']'                      (rule 23)
	variables -> variables ',' var arrays .             (rule 26)

	';'            reduce using rule 26
	'['            shift, and enter state 144
	','            reduce using rule 26


State 137

	variables -> variables ',' asteriscos var .         (rule 27)

	';'            reduce using rule 27
	','            reduce using rule 27


State 138

	arrays -> '[' int . ']'                             (rule 24)

	']'            shift, and enter state 150


State 139

	FuncionNoArgs -> Types var '(' ')' .                (rule 38)

	'{'            reduce using rule 38


State 140

	Parametro -> Types . var                            (rule 74)

	var            shift, and enter state 149


State 141

	Parametros -> Parametro .                           (rule 76)

	')'            reduce using rule 76
	','            reduce using rule 76


State 142

	FuncionConArgs -> Types var FuncionP2 Parametros . ')'    (rule 39)
	Parametros -> Parametros . ',' Parametro            (rule 75)

	')'            shift, and enter state 147
	','            shift, and enter state 148


State 143

	Parametro -> ref . Types var                        (rule 73)

	type           shift, and enter state 12
	functionType   shift, and enter state 13
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	'('            shift, and enter state 17

	basicType      goto state 3
	Types          goto state 146

State 144

	arrays -> arrays '[' . int ']'                      (rule 23)

	int            shift, and enter state 145


State 145

	arrays -> arrays '[' int . ']'                      (rule 23)

	']'            shift, and enter state 203


State 146

	Parametro -> ref Types . var                        (rule 73)

	var            shift, and enter state 202


State 147

	FuncionConArgs -> Types var FuncionP2 Parametros ')' .    (rule 39)

	'{'            reduce using rule 39


State 148

	Parametros -> Parametros ',' . Parametro            (rule 75)

	type           shift, and enter state 12
	functionType   shift, and enter state 13
	ref            shift, and enter state 143
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	'('            shift, and enter state 17

	basicType      goto state 3
	Types          goto state 140
	Parametro      goto state 201

State 149

	Parametro -> Types var .                            (rule 74)

	')'            reduce using rule 74
	','            reduce using rule 74


State 150

	arrays -> '[' int ']' .                             (rule 24)

	';'            reduce using rule 24
	'['            reduce using rule 24
	','            reduce using rule 24


State 151

	Asignacion -> Atom2 '=' Exp .                       (rule 64)
	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           shift, and enter state 113
	'>='           shift, and enter state 114
	'<='           shift, and enter state 115
	'!='           shift, and enter state 116
	'||'           shift, and enter state 117
	'&&'           shift, and enter state 118
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	';'            reduce using rule 64
	'%'            shift, and enter state 124
	'<'            shift, and enter state 125
	'>'            shift, and enter state 126
	'&'            shift, and enter state 127
	'|'            shift, and enter state 128


State 152

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp '|' Exp .                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           shift, and enter state 113
	'>='           shift, and enter state 114
	'<='           shift, and enter state 115
	'!='           shift, and enter state 116
	'||'           reduce using rule 104
	'&&'           reduce using rule 104
	'='            reduce using rule 104
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            reduce using rule 104
	';'            reduce using rule 104
	'%'            shift, and enter state 124
	'<'            shift, and enter state 125
	'>'            shift, and enter state 126
	'&'            shift, and enter state 127
	'|'            reduce using rule 104
	']'            reduce using rule 104
	','            reduce using rule 104


State 153

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp '&' Exp .                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           shift, and enter state 113
	'>='           shift, and enter state 114
	'<='           shift, and enter state 115
	'!='           shift, and enter state 116
	'||'           reduce using rule 102
	'&&'           reduce using rule 102
	'='            reduce using rule 102
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            reduce using rule 102
	';'            reduce using rule 102
	'%'            shift, and enter state 124
	'<'            shift, and enter state 125
	'>'            shift, and enter state 126
	'&'            reduce using rule 102
	'|'            reduce using rule 102
	']'            reduce using rule 102
	','            reduce using rule 102


State 154

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp '>' Exp .                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           reduce using rule 98
	'>='           fail
	'<='           fail
	'!='           reduce using rule 98
	'||'           reduce using rule 98
	'&&'           reduce using rule 98
	'='            reduce using rule 98
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            reduce using rule 98
	';'            reduce using rule 98
	'%'            shift, and enter state 124
	'<'            fail
	'>'            fail
	'&'            reduce using rule 98
	'|'            reduce using rule 98
	']'            reduce using rule 98
	','            reduce using rule 98


State 155

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp '<' Exp .                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           reduce using rule 96
	'>='           fail
	'<='           fail
	'!='           reduce using rule 96
	'||'           reduce using rule 96
	'&&'           reduce using rule 96
	'='            reduce using rule 96
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            reduce using rule 96
	';'            reduce using rule 96
	'%'            shift, and enter state 124
	'<'            fail
	'>'            fail
	'&'            reduce using rule 96
	'|'            reduce using rule 96
	']'            reduce using rule 96
	','            reduce using rule 96


State 156

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp '%' Exp .                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           reduce using rule 103
	'>>'           reduce using rule 103
	'.'            shift, and enter state 112
	'=='           reduce using rule 103
	'>='           reduce using rule 103
	'<='           reduce using rule 103
	'!='           reduce using rule 103
	'||'           reduce using rule 103
	'&&'           reduce using rule 103
	'='            reduce using rule 103
	'+'            reduce using rule 103
	'-'            reduce using rule 103
	'*'            reduce using rule 103
	'/'            reduce using rule 103
	')'            reduce using rule 103
	';'            reduce using rule 103
	'%'            reduce using rule 103
	'<'            reduce using rule 103
	'>'            reduce using rule 103
	'&'            reduce using rule 103
	'|'            reduce using rule 103
	']'            reduce using rule 103
	','            reduce using rule 103


State 157

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp '/' Exp .                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           reduce using rule 93
	'>>'           reduce using rule 93
	'.'            shift, and enter state 112
	'=='           reduce using rule 93
	'>='           reduce using rule 93
	'<='           reduce using rule 93
	'!='           reduce using rule 93
	'||'           reduce using rule 93
	'&&'           reduce using rule 93
	'='            reduce using rule 93
	'+'            reduce using rule 93
	'-'            reduce using rule 93
	'*'            reduce using rule 93
	'/'            reduce using rule 93
	')'            reduce using rule 93
	';'            reduce using rule 93
	'%'            reduce using rule 93
	'<'            reduce using rule 93
	'>'            reduce using rule 93
	'&'            reduce using rule 93
	'|'            reduce using rule 93
	']'            reduce using rule 93
	','            reduce using rule 93


State 158

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp '*' Exp .                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           reduce using rule 92
	'>>'           reduce using rule 92
	'.'            shift, and enter state 112
	'=='           reduce using rule 92
	'>='           reduce using rule 92
	'<='           reduce using rule 92
	'!='           reduce using rule 92
	'||'           reduce using rule 92
	'&&'           reduce using rule 92
	'='            reduce using rule 92
	'+'            reduce using rule 92
	'-'            reduce using rule 92
	'*'            reduce using rule 92
	'/'            reduce using rule 92
	')'            reduce using rule 92
	';'            reduce using rule 92
	'%'            reduce using rule 92
	'<'            reduce using rule 92
	'>'            reduce using rule 92
	'&'            reduce using rule 92
	'|'            reduce using rule 92
	']'            reduce using rule 92
	','            reduce using rule 92


State 159

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp '-' Exp .                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           reduce using rule 91
	'>>'           reduce using rule 91
	'.'            shift, and enter state 112
	'=='           reduce using rule 91
	'>='           reduce using rule 91
	'<='           reduce using rule 91
	'!='           reduce using rule 91
	'||'           reduce using rule 91
	'&&'           reduce using rule 91
	'='            reduce using rule 91
	'+'            reduce using rule 91
	'-'            reduce using rule 91
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            reduce using rule 91
	';'            reduce using rule 91
	'%'            shift, and enter state 124
	'<'            reduce using rule 91
	'>'            reduce using rule 91
	'&'            reduce using rule 91
	'|'            reduce using rule 91
	']'            reduce using rule 91
	','            reduce using rule 91


State 160

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp '+' Exp .                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           reduce using rule 90
	'>>'           reduce using rule 90
	'.'            shift, and enter state 112
	'=='           reduce using rule 90
	'>='           reduce using rule 90
	'<='           reduce using rule 90
	'!='           reduce using rule 90
	'||'           reduce using rule 90
	'&&'           reduce using rule 90
	'='            reduce using rule 90
	'+'            reduce using rule 90
	'-'            reduce using rule 90
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            reduce using rule 90
	';'            reduce using rule 90
	'%'            shift, and enter state 124
	'<'            reduce using rule 90
	'>'            reduce using rule 90
	'&'            reduce using rule 90
	'|'            reduce using rule 90
	']'            reduce using rule 90
	','            reduce using rule 90


State 161

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp '&&' Exp .                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           shift, and enter state 113
	'>='           shift, and enter state 114
	'<='           shift, and enter state 115
	'!='           shift, and enter state 116
	'||'           reduce using rule 105
	'&&'           reduce using rule 105
	'='            reduce using rule 105
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            reduce using rule 105
	';'            reduce using rule 105
	'%'            shift, and enter state 124
	'<'            shift, and enter state 125
	'>'            shift, and enter state 126
	'&'            shift, and enter state 127
	'|'            shift, and enter state 128
	']'            reduce using rule 105
	','            reduce using rule 105


State 162

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)
	Exp -> Exp '||' Exp .                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           shift, and enter state 113
	'>='           shift, and enter state 114
	'<='           shift, and enter state 115
	'!='           shift, and enter state 116
	'||'           reduce using rule 106
	'&&'           shift, and enter state 118
	'='            reduce using rule 106
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            reduce using rule 106
	';'            reduce using rule 106
	'%'            shift, and enter state 124
	'<'            shift, and enter state 125
	'>'            shift, and enter state 126
	'&'            shift, and enter state 127
	'|'            shift, and enter state 128
	']'            reduce using rule 106
	','            reduce using rule 106


State 163

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp '!=' Exp .                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           fail
	'>='           shift, and enter state 114
	'<='           shift, and enter state 115
	'!='           fail
	'||'           reduce using rule 101
	'&&'           reduce using rule 101
	'='            reduce using rule 101
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            reduce using rule 101
	';'            reduce using rule 101
	'%'            shift, and enter state 124
	'<'            shift, and enter state 125
	'>'            shift, and enter state 126
	'&'            reduce using rule 101
	'|'            reduce using rule 101
	']'            reduce using rule 101
	','            reduce using rule 101


State 164

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp '<=' Exp .                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           reduce using rule 97
	'>='           fail
	'<='           fail
	'!='           reduce using rule 97
	'||'           reduce using rule 97
	'&&'           reduce using rule 97
	'='            reduce using rule 97
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            reduce using rule 97
	';'            reduce using rule 97
	'%'            shift, and enter state 124
	'<'            fail
	'>'            fail
	'&'            reduce using rule 97
	'|'            reduce using rule 97
	']'            reduce using rule 97
	','            reduce using rule 97


State 165

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp '>=' Exp .                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           reduce using rule 99
	'>='           fail
	'<='           fail
	'!='           reduce using rule 99
	'||'           reduce using rule 99
	'&&'           reduce using rule 99
	'='            reduce using rule 99
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            reduce using rule 99
	';'            reduce using rule 99
	'%'            shift, and enter state 124
	'<'            fail
	'>'            fail
	'&'            reduce using rule 99
	'|'            reduce using rule 99
	']'            reduce using rule 99
	','            reduce using rule 99


State 166

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp '==' Exp .                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           fail
	'>='           shift, and enter state 114
	'<='           shift, and enter state 115
	'!='           fail
	'||'           reduce using rule 100
	'&&'           reduce using rule 100
	'='            reduce using rule 100
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            reduce using rule 100
	';'            reduce using rule 100
	'%'            shift, and enter state 124
	'<'            shift, and enter state 125
	'>'            shift, and enter state 126
	'&'            reduce using rule 100
	'|'            reduce using rule 100
	']'            reduce using rule 100
	','            reduce using rule 100


State 167

	Atom2 -> Exp '.' var .                              (rule 88)

	'<<'           reduce using rule 88
	'>>'           reduce using rule 88
	'.'            reduce using rule 88
	'=='           reduce using rule 88
	'>='           reduce using rule 88
	'<='           reduce using rule 88
	'!='           reduce using rule 88
	'||'           reduce using rule 88
	'&&'           reduce using rule 88
	'='            reduce using rule 88
	'+'            reduce using rule 88
	'-'            reduce using rule 88
	'*'            reduce using rule 88
	'/'            reduce using rule 88
	')'            reduce using rule 88
	';'            reduce using rule 88
	'%'            reduce using rule 88
	'<'            reduce using rule 88
	'>'            reduce using rule 88
	'&'            reduce using rule 88
	'|'            reduce using rule 88
	']'            reduce using rule 88
	','            reduce using rule 88


State 168

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp '>>' Exp .                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           reduce using rule 95
	'>>'           reduce using rule 95
	'.'            shift, and enter state 112
	'=='           reduce using rule 95
	'>='           reduce using rule 95
	'<='           reduce using rule 95
	'!='           reduce using rule 95
	'||'           reduce using rule 95
	'&&'           reduce using rule 95
	'='            reduce using rule 95
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            reduce using rule 95
	';'            reduce using rule 95
	'%'            shift, and enter state 124
	'<'            reduce using rule 95
	'>'            reduce using rule 95
	'&'            reduce using rule 95
	'|'            reduce using rule 95
	']'            reduce using rule 95
	','            reduce using rule 95


State 169

	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp '<<' Exp .                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           reduce using rule 94
	'>>'           reduce using rule 94
	'.'            shift, and enter state 112
	'=='           reduce using rule 94
	'>='           reduce using rule 94
	'<='           reduce using rule 94
	'!='           reduce using rule 94
	'||'           reduce using rule 94
	'&&'           reduce using rule 94
	'='            reduce using rule 94
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            reduce using rule 94
	';'            reduce using rule 94
	'%'            shift, and enter state 124
	'<'            reduce using rule 94
	'>'            reduce using rule 94
	'&'            reduce using rule 94
	'|'            reduce using rule 94
	']'            reduce using rule 94
	','            reduce using rule 94


State 170

	LLamada -> var '(' ParametrosIn . ')'               (rule 65)
	ParametrosIn -> ParametrosIn . ',' Exp              (rule 67)

	')'            shift, and enter state 199
	','            shift, and enter state 200


State 171

	ParametrosIn -> Exp .                               (rule 68)
	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           shift, and enter state 113
	'>='           shift, and enter state 114
	'<='           shift, and enter state 115
	'!='           shift, and enter state 116
	'||'           shift, and enter state 117
	'&&'           shift, and enter state 118
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            reduce using rule 68
	'%'            shift, and enter state 124
	'<'            shift, and enter state 125
	'>'            shift, and enter state 126
	'&'            shift, and enter state 127
	'|'            shift, and enter state 128
	','            reduce using rule 68


State 172

	LLamada -> var '(' ')' .                            (rule 66)

	'<<'           reduce using rule 66
	'>>'           reduce using rule 66
	'.'            reduce using rule 66
	'=='           reduce using rule 66
	'>='           reduce using rule 66
	'<='           reduce using rule 66
	'!='           reduce using rule 66
	'||'           reduce using rule 66
	'&&'           reduce using rule 66
	'='            reduce using rule 66
	'+'            reduce using rule 66
	'-'            reduce using rule 66
	'*'            reduce using rule 66
	'/'            reduce using rule 66
	')'            reduce using rule 66
	';'            reduce using rule 66
	'%'            reduce using rule 66
	'<'            reduce using rule 66
	'>'            reduce using rule 66
	'&'            reduce using rule 66
	'|'            reduce using rule 66
	']'            reduce using rule 66
	','            reduce using rule 66


State 173

	arr -> arr '[' . Exp ']'                            (rule 79)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 198

State 174

	If -> if BoolE Block .                              (rule 60)
	If -> if BoolE Block . else Block                   (rule 61)

	var            reduce using rule 60
	int            reduce using rule 60
	float          reduce using rule 60
	type           reduce using rule 60
	functionType   reduce using rule 60
	bool           reduce using rule 60
	if             reduce using rule 60
	while          reduce using rule 60
	for            reduce using rule 60
	else           shift, and enter state 197
	union          reduce using rule 60
	struct         reduce using rule 60
	unsigned       reduce using rule 60
	continue       reduce using rule 60
	break          reduce using rule 60
	return         reduce using rule 60
	read           reduce using rule 60
	write          reduce using rule 60
	str            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'{'            reduce using rule 60
	'}'            reduce using rule 60
	';'            reduce using rule 60


State 175

	BoolE -> '(' Exp . ')'                              (rule 63)
	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           shift, and enter state 113
	'>='           shift, and enter state 114
	'<='           shift, and enter state 115
	'!='           shift, and enter state 116
	'||'           shift, and enter state 117
	'&&'           shift, and enter state 118
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            shift, and enter state 196
	'%'            shift, and enter state 124
	'<'            shift, and enter state 125
	'>'            shift, and enter state 126
	'&'            shift, and enter state 127
	'|'            shift, and enter state 128


State 176

	While -> while BoolE Instruccion .                  (rule 59)

	var            reduce using rule 59
	int            reduce using rule 59
	float          reduce using rule 59
	type           reduce using rule 59
	functionType   reduce using rule 59
	bool           reduce using rule 59
	if             reduce using rule 59
	while          reduce using rule 59
	for            reduce using rule 59
	union          reduce using rule 59
	struct         reduce using rule 59
	unsigned       reduce using rule 59
	continue       reduce using rule 59
	break          reduce using rule 59
	return         reduce using rule 59
	read           reduce using rule 59
	write          reduce using rule 59
	str            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'{'            reduce using rule 59
	'}'            reduce using rule 59
	';'            reduce using rule 59


State 177

	For -> for '(' Instruccion . BoolE2 Instruccion ')' Instruccion    (rule 58)

	';'            shift, and enter state 195

	BoolE2         goto state 194

State 178

	Instruccion -> return Exp ';' .                     (rule 54)

	var            reduce using rule 54
	int            reduce using rule 54
	float          reduce using rule 54
	type           reduce using rule 54
	functionType   reduce using rule 54
	bool           reduce using rule 54
	if             reduce using rule 54
	while          reduce using rule 54
	for            reduce using rule 54
	union          reduce using rule 54
	struct         reduce using rule 54
	unsigned       reduce using rule 54
	continue       reduce using rule 54
	break          reduce using rule 54
	return         reduce using rule 54
	read           reduce using rule 54
	write          reduce using rule 54
	str            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'{'            reduce using rule 54
	'}'            reduce using rule 54
	';'            reduce using rule 54


State 179

	Instruccion -> read var ';' .                       (rule 55)

	var            reduce using rule 55
	int            reduce using rule 55
	float          reduce using rule 55
	type           reduce using rule 55
	functionType   reduce using rule 55
	bool           reduce using rule 55
	if             reduce using rule 55
	while          reduce using rule 55
	for            reduce using rule 55
	union          reduce using rule 55
	struct         reduce using rule 55
	unsigned       reduce using rule 55
	continue       reduce using rule 55
	break          reduce using rule 55
	return         reduce using rule 55
	read           reduce using rule 55
	write          reduce using rule 55
	str            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'{'            reduce using rule 55
	'}'            reduce using rule 55
	';'            reduce using rule 55


State 180

	Instruccion -> write Exp ';' .                      (rule 56)

	var            reduce using rule 56
	int            reduce using rule 56
	float          reduce using rule 56
	type           reduce using rule 56
	functionType   reduce using rule 56
	bool           reduce using rule 56
	if             reduce using rule 56
	while          reduce using rule 56
	for            reduce using rule 56
	union          reduce using rule 56
	struct         reduce using rule 56
	unsigned       reduce using rule 56
	continue       reduce using rule 56
	break          reduce using rule 56
	return         reduce using rule 56
	read           reduce using rule 56
	write          reduce using rule 56
	str            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'{'            reduce using rule 56
	'}'            reduce using rule 56
	';'            reduce using rule 56


State 181

	AnomFun -> '(' Types . ')' '(' Parametros ')' '{' Instrucciones '}'    (rule 77)
	AnomFun -> '(' Types . ')' '(' ')' '{' Instrucciones '}'    (rule 78)

	')'            shift, and enter state 183


State 182

	Exp -> '(' Exp ')' .                                (rule 107)

	'<<'           reduce using rule 107
	'>>'           reduce using rule 107
	'.'            reduce using rule 107
	'=='           reduce using rule 107
	'>='           reduce using rule 107
	'<='           reduce using rule 107
	'!='           reduce using rule 107
	'||'           reduce using rule 107
	'&&'           reduce using rule 107
	'='            reduce using rule 107
	'+'            reduce using rule 107
	'-'            reduce using rule 107
	'*'            reduce using rule 107
	'/'            reduce using rule 107
	')'            reduce using rule 107
	';'            reduce using rule 107
	'%'            reduce using rule 107
	'<'            reduce using rule 107
	'>'            reduce using rule 107
	'&'            reduce using rule 107
	'|'            reduce using rule 107
	']'            reduce using rule 107
	','            reduce using rule 107


State 183

	AnomFun -> '(' Types ')' . '(' Parametros ')' '{' Instrucciones '}'    (rule 77)
	AnomFun -> '(' Types ')' . '(' ')' '{' Instrucciones '}'    (rule 78)

	'('            shift, and enter state 193


State 184

	Types -> functionType '(' Types ')' '(' . ManyTypes ')'    (rule 20)
	Types -> functionType '(' Types ')' '(' . ')'       (rule 21)

	type           shift, and enter state 12
	functionType   shift, and enter state 13
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	'('            shift, and enter state 17
	')'            shift, and enter state 192

	ManyTypes      goto state 190
	basicType      goto state 3
	Types          goto state 191

State 185

	VarDeclarations -> VarDeclarations VarDeclaration .    (rule 9)

	type           reduce using rule 9
	functionType   reduce using rule 9
	union          reduce using rule 9
	struct         reduce using rule 9
	unsigned       reduce using rule 9
	'('            reduce using rule 9
	'}'            reduce using rule 9


State 186

	Union -> union UnionVar Block2 VarDeclarations Block3 . ';'    (rule 35)

	';'            shift, and enter state 189


State 187

	Struct -> struct StructVar Block2 VarDeclarations Block3 . ';'    (rule 33)

	';'            shift, and enter state 188


State 188

	Struct -> struct StructVar Block2 VarDeclarations Block3 ';' .    (rule 33)

	type           reduce using rule 33
	functionType   reduce using rule 33
	union          reduce using rule 33
	struct         reduce using rule 33
	unsigned       reduce using rule 33
	'('            reduce using rule 33
	%eof           reduce using rule 33


State 189

	Union -> union UnionVar Block2 VarDeclarations Block3 ';' .    (rule 35)

	type           reduce using rule 35
	functionType   reduce using rule 35
	union          reduce using rule 35
	struct         reduce using rule 35
	unsigned       reduce using rule 35
	'('            reduce using rule 35
	%eof           reduce using rule 35


State 190

	ManyTypes -> ManyTypes . ',' Types                  (rule 11)
	Types -> functionType '(' Types ')' '(' ManyTypes . ')'    (rule 20)

	')'            shift, and enter state 211
	','            shift, and enter state 212


State 191

	ManyTypes -> Types .                                (rule 12)

	')'            reduce using rule 12
	','            reduce using rule 12


State 192

	Types -> functionType '(' Types ')' '(' ')' .       (rule 21)

	var            reduce using rule 21
	'*'            reduce using rule 21
	')'            reduce using rule 21
	','            reduce using rule 21


State 193

	AnomFun -> '(' Types ')' '(' . Parametros ')' '{' Instrucciones '}'    (rule 77)
	AnomFun -> '(' Types ')' '(' . ')' '{' Instrucciones '}'    (rule 78)

	type           shift, and enter state 12
	functionType   shift, and enter state 13
	ref            shift, and enter state 143
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	'('            shift, and enter state 17
	')'            shift, and enter state 210

	basicType      goto state 3
	Types          goto state 140
	Parametro      goto state 141
	Parametros     goto state 209

State 194

	For -> for '(' Instruccion BoolE2 . Instruccion ')' Instruccion    (rule 58)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	if             shift, and enter state 67
	while          shift, and enter state 68
	for            shift, and enter state 69
	continue       shift, and enter state 70
	break          shift, and enter state 71
	return         shift, and enter state 72
	read           shift, and enter state 73
	write          shift, and enter state 74
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96
	'{'            shift, and enter state 34
	';'            shift, and enter state 79

	Block          goto state 51
	Block2         goto state 33
	Instruccion    goto state 208
	For            goto state 53
	While          goto state 54
	If             goto state 55
	Asignacion     goto state 56
	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 61
	Exp            goto state 62

State 195

	BoolE2 -> ';' . Exp ';'                             (rule 62)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 207

State 196

	BoolE -> '(' Exp ')' .                              (rule 63)

	var            reduce using rule 63
	int            reduce using rule 63
	float          reduce using rule 63
	bool           reduce using rule 63
	if             reduce using rule 63
	while          reduce using rule 63
	for            reduce using rule 63
	continue       reduce using rule 63
	break          reduce using rule 63
	return         reduce using rule 63
	read           reduce using rule 63
	write          reduce using rule 63
	str            reduce using rule 63
	'-'            reduce using rule 63
	'*'            reduce using rule 63
	'('            reduce using rule 63
	'{'            reduce using rule 63
	';'            reduce using rule 63


State 197

	If -> if BoolE Block else . Block                   (rule 61)

	'{'            shift, and enter state 34

	Block          goto state 206
	Block2         goto state 33

State 198

	arr -> arr '[' Exp . ']'                            (rule 79)
	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           shift, and enter state 113
	'>='           shift, and enter state 114
	'<='           shift, and enter state 115
	'!='           shift, and enter state 116
	'||'           shift, and enter state 117
	'&&'           shift, and enter state 118
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	'%'            shift, and enter state 124
	'<'            shift, and enter state 125
	'>'            shift, and enter state 126
	'&'            shift, and enter state 127
	'|'            shift, and enter state 128
	']'            shift, and enter state 205


State 199

	LLamada -> var '(' ParametrosIn ')' .               (rule 65)

	'<<'           reduce using rule 65
	'>>'           reduce using rule 65
	'.'            reduce using rule 65
	'=='           reduce using rule 65
	'>='           reduce using rule 65
	'<='           reduce using rule 65
	'!='           reduce using rule 65
	'||'           reduce using rule 65
	'&&'           reduce using rule 65
	'='            reduce using rule 65
	'+'            reduce using rule 65
	'-'            reduce using rule 65
	'*'            reduce using rule 65
	'/'            reduce using rule 65
	')'            reduce using rule 65
	';'            reduce using rule 65
	'%'            reduce using rule 65
	'<'            reduce using rule 65
	'>'            reduce using rule 65
	'&'            reduce using rule 65
	'|'            reduce using rule 65
	']'            reduce using rule 65
	','            reduce using rule 65


State 200

	ParametrosIn -> ParametrosIn ',' . Exp              (rule 67)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96

	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 93
	Exp            goto state 204

State 201

	Parametros -> Parametros ',' Parametro .            (rule 75)

	')'            reduce using rule 75
	','            reduce using rule 75


State 202

	Parametro -> ref Types var .                        (rule 73)

	')'            reduce using rule 73
	','            reduce using rule 73


State 203

	arrays -> arrays '[' int ']' .                      (rule 23)

	';'            reduce using rule 23
	'['            reduce using rule 23
	','            reduce using rule 23


State 204

	ParametrosIn -> ParametrosIn ',' Exp .              (rule 67)
	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           shift, and enter state 113
	'>='           shift, and enter state 114
	'<='           shift, and enter state 115
	'!='           shift, and enter state 116
	'||'           shift, and enter state 117
	'&&'           shift, and enter state 118
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	')'            reduce using rule 67
	'%'            shift, and enter state 124
	'<'            shift, and enter state 125
	'>'            shift, and enter state 126
	'&'            shift, and enter state 127
	'|'            shift, and enter state 128
	','            reduce using rule 67


State 205

	arr -> arr '[' Exp ']' .                            (rule 79)

	'<<'           reduce using rule 79
	'>>'           reduce using rule 79
	'.'            reduce using rule 79
	'=='           reduce using rule 79
	'>='           reduce using rule 79
	'<='           reduce using rule 79
	'!='           reduce using rule 79
	'||'           reduce using rule 79
	'&&'           reduce using rule 79
	'='            reduce using rule 79
	'+'            reduce using rule 79
	'-'            reduce using rule 79
	'*'            reduce using rule 79
	'/'            reduce using rule 79
	')'            reduce using rule 79
	';'            reduce using rule 79
	'%'            reduce using rule 79
	'<'            reduce using rule 79
	'>'            reduce using rule 79
	'&'            reduce using rule 79
	'|'            reduce using rule 79
	'['            reduce using rule 79
	']'            reduce using rule 79
	','            reduce using rule 79


State 206

	If -> if BoolE Block else Block .                   (rule 61)

	var            reduce using rule 61
	int            reduce using rule 61
	float          reduce using rule 61
	type           reduce using rule 61
	functionType   reduce using rule 61
	bool           reduce using rule 61
	if             reduce using rule 61
	while          reduce using rule 61
	for            reduce using rule 61
	union          reduce using rule 61
	struct         reduce using rule 61
	unsigned       reduce using rule 61
	continue       reduce using rule 61
	break          reduce using rule 61
	return         reduce using rule 61
	read           reduce using rule 61
	write          reduce using rule 61
	str            reduce using rule 61
	'-'            reduce using rule 61
	'*'            reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'{'            reduce using rule 61
	'}'            reduce using rule 61
	';'            reduce using rule 61


State 207

	BoolE2 -> ';' Exp . ';'                             (rule 62)
	Atom2 -> Exp . '.' var                              (rule 88)
	Exp -> Exp . '+' Exp                                (rule 90)
	Exp -> Exp . '-' Exp                                (rule 91)
	Exp -> Exp . '*' Exp                                (rule 92)
	Exp -> Exp . '/' Exp                                (rule 93)
	Exp -> Exp . '<<' Exp                               (rule 94)
	Exp -> Exp . '>>' Exp                               (rule 95)
	Exp -> Exp . '<' Exp                                (rule 96)
	Exp -> Exp . '<=' Exp                               (rule 97)
	Exp -> Exp . '>' Exp                                (rule 98)
	Exp -> Exp . '>=' Exp                               (rule 99)
	Exp -> Exp . '==' Exp                               (rule 100)
	Exp -> Exp . '!=' Exp                               (rule 101)
	Exp -> Exp . '&' Exp                                (rule 102)
	Exp -> Exp . '%' Exp                                (rule 103)
	Exp -> Exp . '|' Exp                                (rule 104)
	Exp -> Exp . '&&' Exp                               (rule 105)
	Exp -> Exp . '||' Exp                               (rule 106)

	'<<'           shift, and enter state 110
	'>>'           shift, and enter state 111
	'.'            shift, and enter state 112
	'=='           shift, and enter state 113
	'>='           shift, and enter state 114
	'<='           shift, and enter state 115
	'!='           shift, and enter state 116
	'||'           shift, and enter state 117
	'&&'           shift, and enter state 118
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	';'            shift, and enter state 217
	'%'            shift, and enter state 124
	'<'            shift, and enter state 125
	'>'            shift, and enter state 126
	'&'            shift, and enter state 127
	'|'            shift, and enter state 128


State 208

	For -> for '(' Instruccion BoolE2 Instruccion . ')' Instruccion    (rule 58)

	')'            shift, and enter state 216


State 209

	Parametros -> Parametros . ',' Parametro            (rule 75)
	AnomFun -> '(' Types ')' '(' Parametros . ')' '{' Instrucciones '}'    (rule 77)

	')'            shift, and enter state 215
	','            shift, and enter state 148


State 210

	AnomFun -> '(' Types ')' '(' ')' . '{' Instrucciones '}'    (rule 78)

	'{'            shift, and enter state 214


State 211

	Types -> functionType '(' Types ')' '(' ManyTypes ')' .    (rule 20)

	var            reduce using rule 20
	'*'            reduce using rule 20
	')'            reduce using rule 20
	','            reduce using rule 20


State 212

	ManyTypes -> ManyTypes ',' . Types                  (rule 11)

	type           shift, and enter state 12
	functionType   shift, and enter state 13
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	'('            shift, and enter state 17

	basicType      goto state 3
	Types          goto state 213

State 213

	ManyTypes -> ManyTypes ',' Types .                  (rule 11)

	')'            reduce using rule 11
	','            reduce using rule 11


State 214

	AnomFun -> '(' Types ')' '(' ')' '{' . Instrucciones '}'    (rule 78)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	type           shift, and enter state 12
	functionType   shift, and enter state 13
	bool           shift, and enter state 66
	if             shift, and enter state 67
	while          shift, and enter state 68
	for            shift, and enter state 69
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	continue       shift, and enter state 70
	break          shift, and enter state 71
	return         shift, and enter state 72
	read           shift, and enter state 73
	write          shift, and enter state 74
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 78
	'{'            shift, and enter state 34
	';'            shift, and enter state 79

	basicType      goto state 3
	Types          goto state 49
	variables      goto state 5
	VarDeclaration goto state 50
	Block          goto state 51
	Block2         goto state 33
	Instruccion    goto state 52
	For            goto state 53
	While          goto state 54
	If             goto state 55
	Asignacion     goto state 56
	LLamada        goto state 57
	Instrucciones  goto state 220
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 61
	Exp            goto state 62

State 215

	AnomFun -> '(' Types ')' '(' Parametros ')' . '{' Instrucciones '}'    (rule 77)

	'{'            shift, and enter state 219


State 216

	For -> for '(' Instruccion BoolE2 Instruccion ')' . Instruccion    (rule 58)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	bool           shift, and enter state 66
	if             shift, and enter state 67
	while          shift, and enter state 68
	for            shift, and enter state 69
	continue       shift, and enter state 70
	break          shift, and enter state 71
	return         shift, and enter state 72
	read           shift, and enter state 73
	write          shift, and enter state 74
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 96
	'{'            shift, and enter state 34
	';'            shift, and enter state 79

	Block          goto state 51
	Block2         goto state 33
	Instruccion    goto state 218
	For            goto state 53
	While          goto state 54
	If             goto state 55
	Asignacion     goto state 56
	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 61
	Exp            goto state 62

State 217

	BoolE2 -> ';' Exp ';' .                             (rule 62)

	var            reduce using rule 62
	int            reduce using rule 62
	float          reduce using rule 62
	bool           reduce using rule 62
	if             reduce using rule 62
	while          reduce using rule 62
	for            reduce using rule 62
	continue       reduce using rule 62
	break          reduce using rule 62
	return         reduce using rule 62
	read           reduce using rule 62
	write          reduce using rule 62
	str            reduce using rule 62
	'-'            reduce using rule 62
	'*'            reduce using rule 62
	'('            reduce using rule 62
	'{'            reduce using rule 62
	';'            reduce using rule 62


State 218

	For -> for '(' Instruccion BoolE2 Instruccion ')' Instruccion .    (rule 58)

	var            reduce using rule 58
	int            reduce using rule 58
	float          reduce using rule 58
	type           reduce using rule 58
	functionType   reduce using rule 58
	bool           reduce using rule 58
	if             reduce using rule 58
	while          reduce using rule 58
	for            reduce using rule 58
	union          reduce using rule 58
	struct         reduce using rule 58
	unsigned       reduce using rule 58
	continue       reduce using rule 58
	break          reduce using rule 58
	return         reduce using rule 58
	read           reduce using rule 58
	write          reduce using rule 58
	str            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'{'            reduce using rule 58
	'}'            reduce using rule 58
	';'            reduce using rule 58


State 219

	AnomFun -> '(' Types ')' '(' Parametros ')' '{' . Instrucciones '}'    (rule 77)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	type           shift, and enter state 12
	functionType   shift, and enter state 13
	bool           shift, and enter state 66
	if             shift, and enter state 67
	while          shift, and enter state 68
	for            shift, and enter state 69
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	continue       shift, and enter state 70
	break          shift, and enter state 71
	return         shift, and enter state 72
	read           shift, and enter state 73
	write          shift, and enter state 74
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 78
	'{'            shift, and enter state 34
	';'            shift, and enter state 79

	basicType      goto state 3
	Types          goto state 49
	variables      goto state 5
	VarDeclaration goto state 50
	Block          goto state 51
	Block2         goto state 33
	Instruccion    goto state 52
	For            goto state 53
	While          goto state 54
	If             goto state 55
	Asignacion     goto state 56
	LLamada        goto state 57
	Instrucciones  goto state 222
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 61
	Exp            goto state 62

State 220

	Instrucciones -> Instrucciones . Instruccion        (rule 69)
	Instrucciones -> Instrucciones . VarDeclaration     (rule 71)
	AnomFun -> '(' Types ')' '(' ')' '{' Instrucciones . '}'    (rule 78)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	type           shift, and enter state 12
	functionType   shift, and enter state 13
	bool           shift, and enter state 66
	if             shift, and enter state 67
	while          shift, and enter state 68
	for            shift, and enter state 69
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	continue       shift, and enter state 70
	break          shift, and enter state 71
	return         shift, and enter state 72
	read           shift, and enter state 73
	write          shift, and enter state 74
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 78
	'{'            shift, and enter state 34
	'}'            shift, and enter state 221
	';'            shift, and enter state 79

	basicType      goto state 3
	Types          goto state 49
	variables      goto state 5
	VarDeclaration goto state 130
	Block          goto state 51
	Block2         goto state 33
	Instruccion    goto state 132
	For            goto state 53
	While          goto state 54
	If             goto state 55
	Asignacion     goto state 56
	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 61
	Exp            goto state 62

State 221

	AnomFun -> '(' Types ')' '(' ')' '{' Instrucciones '}' .    (rule 78)

	'<<'           reduce using rule 78
	'>>'           reduce using rule 78
	'.'            reduce using rule 78
	'=='           reduce using rule 78
	'>='           reduce using rule 78
	'<='           reduce using rule 78
	'!='           reduce using rule 78
	'||'           reduce using rule 78
	'&&'           reduce using rule 78
	'='            reduce using rule 78
	'+'            reduce using rule 78
	'-'            reduce using rule 78
	'*'            reduce using rule 78
	'/'            reduce using rule 78
	')'            reduce using rule 78
	';'            reduce using rule 78
	'%'            reduce using rule 78
	'<'            reduce using rule 78
	'>'            reduce using rule 78
	'&'            reduce using rule 78
	'|'            reduce using rule 78
	']'            reduce using rule 78
	','            reduce using rule 78


State 222

	Instrucciones -> Instrucciones . Instruccion        (rule 69)
	Instrucciones -> Instrucciones . VarDeclaration     (rule 71)
	AnomFun -> '(' Types ')' '(' Parametros ')' '{' Instrucciones . '}'    (rule 77)

	var            shift, and enter state 63
	int            shift, and enter state 64
	float          shift, and enter state 65
	type           shift, and enter state 12
	functionType   shift, and enter state 13
	bool           shift, and enter state 66
	if             shift, and enter state 67
	while          shift, and enter state 68
	for            shift, and enter state 69
	union          shift, and enter state 24
	struct         shift, and enter state 25
	unsigned       shift, and enter state 16
	continue       shift, and enter state 70
	break          shift, and enter state 71
	return         shift, and enter state 72
	read           shift, and enter state 73
	write          shift, and enter state 74
	str            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'('            shift, and enter state 78
	'{'            shift, and enter state 34
	'}'            shift, and enter state 223
	';'            shift, and enter state 79

	basicType      goto state 3
	Types          goto state 49
	variables      goto state 5
	VarDeclaration goto state 130
	Block          goto state 51
	Block2         goto state 33
	Instruccion    goto state 132
	For            goto state 53
	While          goto state 54
	If             goto state 55
	Asignacion     goto state 56
	LLamada        goto state 57
	AnomFun        goto state 59
	Atom           goto state 60
	Atom2          goto state 61
	Exp            goto state 62

State 223

	AnomFun -> '(' Types ')' '(' Parametros ')' '{' Instrucciones '}' .    (rule 77)

	'<<'           reduce using rule 77
	'>>'           reduce using rule 77
	'.'            reduce using rule 77
	'=='           reduce using rule 77
	'>='           reduce using rule 77
	'<='           reduce using rule 77
	'!='           reduce using rule 77
	'||'           reduce using rule 77
	'&&'           reduce using rule 77
	'='            reduce using rule 77
	'+'            reduce using rule 77
	'-'            reduce using rule 77
	'*'            reduce using rule 77
	'/'            reduce using rule 77
	')'            reduce using rule 77
	';'            reduce using rule 77
	'%'            reduce using rule 77
	'<'            reduce using rule 77
	'>'            reduce using rule 77
	'&'            reduce using rule 77
	'|'            reduce using rule 77
	']'            reduce using rule 77
	','            reduce using rule 77


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 111
Number of terminals: 47
Number of non-terminals: 39
Number of states: 224
